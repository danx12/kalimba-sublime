<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>asm</string>
	</array>
	<key>name</key>
	<string>Kalimba Assembly Language</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>comment</key>
			<string>Comments in the code</string>
			<key>match</key>
			<string>\/\/.*</string>
			<key>name</key>
			<string>comment.line.kal</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.kal</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.c.kal</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Tags</string>
			<key>match</key>
			<string>(\b.+:)</string>
			<key>name</key>
			<string>entity.name.class.kal</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.import.kal</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.kal</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.kal</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Preprocessor directives with arguments</string>
			<key>match</key>
			<string>(#include|#define|#ifndef|#elif|#ifdef|#warning|#error|#undef)\b(\s*"[^"]+")?(.*)</string>
			<key>name</key>
			<string>source.kal</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Preprocessor directives with NO arguments</string>
			<key>match</key>
			<string>(#else|#line|#endif)\b</string>
			<key>name</key>
			<string>keyword.control.import</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Assignement operator =</string>
			<key>match</key>
			<string>=</string>
			<key>name</key>
			<string>keyword.operator.assignment.kal</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Airthmetic operators \+, \-, \*, \\</string>
			<key>match</key>
			<string>\+|\-|\*|\/|\%</string>
			<key>name</key>
			<string>keyword.operator.arithmetic.kal</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Registers like r0, r1, r10</string>
			<key>match</key>
			<string>\b(r[0-9]|r10|I[0-7]|L[0-1,4-5]|M[1-3]|B[0-5]|rMAC|rMAC2|rMAC12|rMAC0|DoLoopStart|DOLoopEnd|DivResult|DivRemainder|rMACB2|rMACB12|rMACB0|Null|rLink|rFlags|rMACB|)\b</string>
			<key>name</key>
			<string>variable.parameter.register.kal</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Keywords like conditional keywords like if, do, jump</string>
			<key>match</key>
			<string>\b(if|do|jump)\b</string>
			<key>name</key>
			<string>keyword.other.control.conditional.kal</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Function push and pop return to caller</string>
			<key>match</key>
			<string>\$\b(push_rLink_macro|pop_rLink_and_rts)</string>
			<key>name</key>
			<string>keyword.operator.conditional.kal</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Keywords call, push, pop</string>
			<key>match</key>
			<string>\b(call|push|pop|nop|rts)\b</string>
			<key>name</key>
			<string>keyword.operator.conditional.kal</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Keywords AND, OR, ASHIFT, LSFHIT</string>
			<key>match</key>
			<string>\b(AND|OR|ASHIFT|LSHIFT|ABS|XOR|MAX|MIN)\b</string>
			<key>name</key>
			<string>keyword.operator.word.kal</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Variable types .VAR and .CONST</string>
			<key>match</key>
			<string>(\.VAR(\/DM([1-2])?CIRC|\/DM[1-2]|16|8)?|\.CONST|\.BLOCK|\.ENDBLOCK)</string>
			<key>name</key>
			<string>storage.modifier.variableType.kal</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\.MODULE)\b\s(\$.+)(?=\;)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.kal</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.kal</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Modules</string>
			<key>end</key>
			<string>(\.ENDMODULE)(?=\;)\b</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.kal</string>
				</dict>
			</dict>
			<key>name</key>
			<string>source.kal</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>comment</key>
			<string>Flags</string>
			<key>match</key>
			<string>\b(NZ|Z|C|NC|NE|NEG|POS|V|NV|HI|LS|GE|LT|GT|LE|USERDEF)(?=\s)</string>
			<key>name</key>
			<string>variable.language.kal</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Address of/ Global variable</string>
			<key>match</key>
			<string>\&amp;?(\$)|\&amp;</string>
			<key>name</key>
			<string>storage.type.kal</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>([A-Z_-]*)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.function.kal</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>source.kal</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>All Macros</string>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>source.kal</string>
				</dict>
			</dict>
			<key>name</key>
			<string>support.macros.kal</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>comment</key>
			<string>Constants</string>
			<key>match</key>
			<string>\b(?![0-9])(?&lt;!\.)[A-Z0-9\-\_]{2,}</string>
			<key>name</key>
			<string>constant.kalConstant.kal</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(M\[)</string>
			<key>comment</key>
			<string>Memory access</string>
			<key>end</key>
			<string>(\])</string>
			<key>name</key>
			<string>storage.modifier.memory.kal</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>comment</key>
			<string>Hex numbers</string>
			<key>match</key>
			<string>\b(0x)(?i)[a-f0-9]+</string>
			<key>name</key>
			<string>constant.character.hexadecimal.kal</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Decimal numbers</string>
			<key>match</key>
			<string>(?&lt;!\w)[-+]?[0-9]*\.?[0-9]+(?!\w)</string>
			<key>name</key>
			<string>constant.character.decimal.kal</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.kal</string>
	<key>uuid</key>
	<string>242e305f-4191-4e03-bf1e-4f5b1db18deb</string>
</dict>
</plist>
